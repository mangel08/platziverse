{"version":3,"sources":["agent-test.js"],"names":["test","require","proxyquire","config","logging","MetricStub","belongsTo","AgentStub","db","beforeEach","hasMany","setupDatabase","t","truthy","Agent"],"mappings":"AAAA;;;;;AAEA,MAAMA,OAAOC,QAAQ,KAAR,CAAb;AACA,MAAMC,aAAaD,QAAQ,YAAR,CAAnB;;AAEA,IAAIE,SAAS;AACXC,WAAS,YAAY,CAAE;AADZ,CAAb;;AAIA,IAAIC,aAAa;AACfC,aAAW,YAAY,CAAE;AADV,CAAjB;;AAIA,IAAIC,YAAY,IAAhB;AACA,IAAIC,KAAK,IAAT;;AAEAR,KAAKS,UAAL,CAAgB,YAAY;AAC1BF,cAAY;AACVG,aAAS,YAAY,CAAE;AADb,GAAZ;;AAIA,QAAMC,gBAAgBT,WAAW,KAAX,EAAkB;AACtC,sBAAkB,MAAMK,SADc;AAEtC,uBAAmB,MAAMF;AAFa,GAAlB,CAAtB;AAIAG,OAAK,MAAMG,cAAcR,MAAd,CAAX;AACD,CAVD;;AAYAH,KAAK,OAAL,EAAcY,KAAK;AAAA;;AACjBA,IAAEC,MAAF,uBAAS,qCAAGC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAmB,4BAAnB;AACD,CAFD","file":"agent-test.js","sourcesContent":["'use strict'\n\nconst test = require('ava')\nconst proxyquire = require('proxyquire')\n\nlet config = {\n  logging: function () {}\n}\n\nlet MetricStub = {\n  belongsTo: function () {}\n}\n\nlet AgentStub = null\nlet db = null\n\ntest.beforeEach(async () => {\n  AgentStub = {\n    hasMany: function () {}\n  }\n\n  const setupDatabase = proxyquire('../', {\n    './models/agent': () => AgentStub,\n    './models/metric': () => MetricStub\n  })\n  db = await setupDatabase(config)\n})\n\ntest('Agent', t => {\n  t.truthy(db.Agent, 'Agent service should exist')\n})\n"]}